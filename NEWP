upload.js 
{
    "Incident Number": "1234",
    "Date": "6/13/2024",
    "Authors": "Kashish kinraa",
    "Status": "Mitigated",
    "Summary": "This is root cause",
    "Impact": "This is the impact This is the impact",
    "Root Causes": "This is the root cause",
    "Trigger": "Hellohi",
    "Change(s) that triggered the incident": "Hello hiHellohi",
    "Resolution": "Hello hhi",
    "Detection": "Helloi",
    "Incident Theme": "Choose an item.",
    "Link to the latest ORR": "Hello hilohi",
    "SLO Impact": "Hello hi",
    "What Went Well": "Kash",
    "What Went Wrong": "Click or tap here to enter text.",
    "Where We Got Lucky": [
        "Kashish",
        "Kinra",
        "Hi",
        "Hello",
        {
            "text": "bye",
            "highlighted": true
        }
    ],
    "F2": "Click or tap here to enter text."
}

-------------------------


app.js
const express = require('express');
const fs = require('fs');
const multer = require('multer');  
const upload = multer({ dest: 'uploads/' });
const path = require('path');
const { processDocument } = require('./PostData');
const { extractContentControlTags } = require('./upload.js');
const app = express();
// const { extractContentControlTags } = require('./upload');

app.use(express.json());

const log = (message) => {
  console.log(`[${new Date().toISOString()}] ${message}`);
};

app.post('/extract-tags', upload.single('Docxfile'), async (req, res) => {
  if (!req.file) {
    log(`No file received in the request`);
    return res.status(400).send('No file uploaded');
  }

  log(`Received file for extraction: ${req.file.path}`);
  const filePath = req.file.path;

  try {
    const tags = await extractContentControlTags(filePath);
    res.status(200).json(tags);
  } catch (error) {
    console.error('Error extracting tags:', error);
    res.status(500).send('Error extracting tags');
  } finally {
    fs.unlinkSync(filePath);
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  log(`Server is running on port ${PORT}`);
});
