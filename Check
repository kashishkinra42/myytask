const fs = require('fs');
const path = require('path');
const axios = require('axios');
const FormData = require('form-data');
const { log, PORT } = require('./app');

const uploadDocument = async () => {
  const filePath = path.join(__dirname, 'your-document.docx');
  const url = `http://localhost:${PORT}/update-document`;

  try {
    const form = new FormData();
    form.append('file', fs.createReadStream(filePath));

    const response = await axios.post(url, form, {
      headers: {
        ...form.getHeaders(),
      },
    });

    log(`Status: ${response.status}`);
    log('Response:', response.data);
  } catch (error) {
    console.error('Error uploading document:', error.message);
  }
};

const log = (message) => {
  console.log(`[${new Date().toISOString()}] ${message}`);
};

module.exports = { uploadDocument, log };



const express = require('express');
const { uploadDocument } = require('./upload');
const { log } = require('./upload');

const app = express();

app.use(express.json());

const PORT = process.env.PORT || 3000;

app.post('/update-document', (req, res) => {
  log(`Received JSON: ${JSON.stringify(req.body)}`);
  const jsonContent = req.body;

  // Simulate processing or handling of JSON content
  // For example, logging and sending a response
  res.status(200).json({ jsonContent });
});

module.exports = { app, log, PORT };

