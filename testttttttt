function replacePlaceholder(documentContent, data) {
  if (!documentContent) {
    return '<w:document/>'; // Return empty document structure if no content
  }

  const doc = new DOMParser().parseFromString(documentContent, 'application/xml');
  const select = xpath.useNamespaces({ w: 'http://schemas.openxmlformats.org/wordprocessingml/2006/main' });

  const placeholders = select('//w:sdt', doc);
  placeholders.forEach((placeholder) => {
    const tag = select('string(.//w:tag/@w:val)', placeholder);
    if (data && data[tag]) {
      const textNode = select('.//w:t', placeholder)[0];
      if (textNode) {
        textNode.textContent = processTagValue(data[tag]);
      }
    } else {
      // Handle non-existent or undefined placeholders
      const textNode = select('.//w:t', placeholder)[0];
      if (textNode) {
        textNode.textContent = '';
      }
    }
  });

  return new XMLSerializer().serializeToString(doc);
}
